apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.deployment.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.api.deployment.name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.api.deployment.pod.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.api.deployment.pod.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.api.deployment.pod.name }}
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/component: api
    spec:
      initContainers:
        - name: check-mssql-service
          image: {{ .Values.api.deployment.pod.initContainer.image.name }}
          command: 
            - sh
            - -c
          args:
            - |
              until nslookup {{ .Values.data.service.name }};
              do
                echo "Waiting for {{ .Values.data.service.name }}";
                sleep 2;
              done
      containers:
        - name: dotnet-api
          image: {{ .Values.api.deployment.pod.container.image.name }}
          imagePullPolicy: {{ .Values.api.deployment.pod.container.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.api.deployment.pod.container.containerPort }}
          envFrom:
            - secretRef: 
                name: {{ .Values.data.secret.name }}
          env:
            - name: APP_ENVIRONMENT
              value: {{ .Values.environment }}
            - name: API_CONFIG_ConnectionStrings__AdventureWorks
              value: Server={{ .Values.data.service.name }};Database={{ .Values.data.sql.database.name }};User=$(WEB_API_LOGIN);Password=$(WEB_API_LOGIN_PASSWORD)
          volumeMounts:
            - name: appsettings
              mountPath: {{ .Values.api.dotnet.api.appSettingsPath }}
      volumes:
        - name: appsettings
          secret:
            secretName: {{ .Values.api.secret.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.api.service.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.api.service.name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: api
spec:
  selector:
    app.kubernetes.io/name: {{ .Values.api.deployment.pod.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.api.service.port }}
      targetPort: {{ .Values.api.deployment.pod.container.containerPort }}
