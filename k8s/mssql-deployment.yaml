apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
  labels:
    app.kubernetes.io/name: mssql-deployment
    app.kubernetes.io/part-of: adventureworks
    app.kubernetes.io/component: data
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mssql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mssql
        app.kubernetes.io/part-of: adventureworks
        app.kubernetes.io/component: data
    spec:
      securityContext:
        fsGroup: 10001
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: sql-backup
          image: kecoacr.azurecr.io/adventureworks2017-mssql2019-ubuntu16.04-backup-only:1.0
          imagePullPolicy: Always
          command: 
            - sh
            - -c
          args:
            -  |
              if [ ! -d "/data/data" ]; then
                echo "MSSQL data doesn't exist. Copying backup."
                cp -r /var/opt/mssql/data/ /data
                echo "Backup data copied"
              else
                echo "MSSQL data exists. Skipping backup."
              fi
          volumeMounts:
            - name: mssqldb
              mountPath: /data
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2019-CU2-ubuntu-16.04
          ports:
            - containerPort: 1433
          env:
            - name: MSSQL_PID
              value: "Developer"
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql
                  key: SA_PASSWORD 
          volumeMounts:
            - name: mssqldb
              mountPath: /var/opt/mssql
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - |
                    LOGIN_EXISTS=$(/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$SA_PASSWORD" -Q "SELECT sp.name FROM sys.server_principals sp LEFT JOIN sys.sql_logins sl ON sp.principal_id = sl.principal_id WHERE sp.name = 'WebApiLogin'" | grep "WebApiLogin")
                    if [ -z "$LOGIN_EXISTS" ]; then
                      echo "Login doesn't exist.  Creating login."
                      /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$SA_PASSWORD" -Q "CREATE LOGIN WebApiLogin WITH PASSWORD = '?8d5EbDU~j{_Ea]'"
                      /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$SA_PASSWORD" -Q "
                      Use AdventureWorks2017;
                      GO
                      IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'WebApiUser')
                      BEGIN
                          CREATE USER WebApiUser FOR LOGIN WebApiLogin
                          EXEC sp_addrolemember N'db_owner', N'WebApiUser'
                      END;
                      GO"
                      echo "Login created."
                    else
                      echo "Login exists. Skipping creation."
                    fi
      volumes:
        - name: mssqldb
          persistentVolumeClaim:
            claimName: mssql-data
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-service
  labels:
    app.kubernetes.io/name: mssql-service
    app.kubernetes.io/part-of: adventureworks
    app.kubernetes.io/component: data
spec:
  selector:
    app.kubernetes.io/name: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
