environment: %%ENVIRONMENT%%

nginx-ingress:
  controller:
    replicaCount: 2
    nodeSelector: 
      beta.kubernetes.io/os: linux
    service:
      annotations:
        service.beta.kubernetes.io/azure-dns-label-name: %%CLUSTER_NAME%%-ingress
        service.beta.kubernetes.io/azure-load-balancer-resource-group: %%AZURE_IP_ADDRESS_RESOURCE_GROUP%%
      loadBalancerIP: %%IP_ADDRESS%%
  defaultBackend:
    nodeSelector:
      beta.kubernetes.io/os: linux

ingress:
  name: nginx-ingress
  class: nginx
  domainName: %%DOMAIN_NAME%%
  tls:
    secretName: tls-secret

certManager:
  issuer:
    name: lets-encrypt-issuer
  acme:
    server: %%CERT_ACME_SERVER%%
    email: %%CERT_REGISTRATION_EMAIL%% 
    privateKeySecretRef:
      name: letsencrypt-secret
    solvers:
      dns01:
        azuredns:
          clientID: %%CERT_MANAGER_CLIENT_ID%%
          subscriptionID: %%AZURE_SUBSCRIPTION_ID%%
          tenantID: %%AZURE_TENANT_ID%%
          resourceGroupName: %%AZURE_DNS_ZONE_RESOURCE_GROUP%%
  secret:
    name: azuredns-config
    key: cert-manager-sp-secret-key 
    values:
      CERT_MANAGER_CLIENT_SECRET: %%CERT_MANAGER_CLIENT_SECRET%%

data:
  deployment:
    name: mssql-deployment
    pod:
      name: mssql
      securityContext:
        fsGroup: 10001
      sqlBackupContainer:
        image:
          name: %%ACR_LOGIN_SERVER%%/%%SQL_IMAGE_NAME%%:%%SQL_IMAGE_VERSION%%
          pullPolicy: Always
      container:
        image:
          name: mcr.microsoft.com/mssql/server:2019-CU2-ubuntu-16.04
        containerPort: 1433
  secret:
    name: mssql-login
    values:
      SA_PASSWORD: TXlDMG05bCZ4UEBzc3cwcmQ= # Replace
      WEB_API_LOGIN: V2ViQXBpTG9naW4= # Replace
      WEB_API_LOGIN_PASSWORD: PzhkNUViRFV+antfRWFd # Replace
      WEB_API_LOGIN_USER: V2ViQXBpVXNlcg== # Replace
  service:
    name: mssql-service
    port: 1433
  sql:
    database:
      name: AdventureWorks2017
      mssqlPath: /var/opt/mssql

postInstall:
  name: login-setup
  image:
    name: mcr.microsoft.com/mssql-tools

sc:
  name: default
  #name: azure-disk-custom
  provisioner: kubernetes.io/azure-disk
  storageAccountType: StandardSSD_LRS
  reclaimPolicy: Retain

pvc:
  name: mssql-data
  storage: 10Gi

api:
  deployment:
    name: dotnet-api-deployment
    pod:
      replicas: 3
      name: dotnet-api
      initContainer:
        image:
          name: busybox
      container:
        image:
          name: %%ACR_LOGIN_SERVER%%/%%API_IMAGE_NAME%%:%%API_IMAGE_VERSION%%
          pullPolicy: Always
        containerPort: 80
  secret:
    name: api-appsettings
    values:
      appSettingsJson: ew0KICAiTG9nZ2luZyI6IHsNCiAgICAiTG9nTGV2ZWwiOiB7DQogICAgICAiRGVmYXVsdCI6ICJJbmZvcm1hdGlvbiIsDQogICAgICAiTWljcm9zb2Z0IjogIldhcm5pbmciLA0KICAgICAgIk1pY3Jvc29mdC5Ib3N0aW5nLkxpZmV0aW1lIjogIkluZm9ybWF0aW9uIg0KICAgIH0NCiAgfSwNCiAgIkFsbG93ZWRIb3N0cyI6ICIqIg0KfQ0K # Replace
  service:
    name: dotnet-api-service
    port: 80
  dotnet:
    api:
      appSettingsPath: /app/settings

app:
  deployment:
    name: dotnet-app-deployment
    pod:
      replicas: 5
      name: dotnet-app
      initContainer:
        image:
          name: busybox
      container:
        image:
          name: %%ACR_LOGIN_SERVER%%/%%APP_IMAGE_NAME%%:%%APP_IMAGE_VERSION%%
          pullPolicy: Always
        containerPort: 80
  configMap:
    name: app-env-config
  service:
    name: dotnet-app-service
    port: 80
  dotnet:
    app:
      envPath: /app/ClientApp/dist
