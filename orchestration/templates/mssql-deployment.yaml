apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.data.deployment.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.data.deployment.name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: data
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.data.deployment.pod.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.data.deployment.pod.name }}
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/component: data
    spec:
      securityContext:
        fsGroup: {{ .Values.data.deployment.pod.securityContext.fsGroup }}
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: sql-backup
          image: {{ .Values.data.deployment.pod.sqlBackupContainer.image.name }}
          imagePullPolicy: {{ .Values.data.deployment.pod.sqlBackupContainer.image.pullPolicy }}
          command: 
            - sh
            - -c
          args:
            -  |
              if [ ! -d "/data/data" ]; then
                echo "MSSQL data doesn't exist. Copying backup."
                cp -r {{ .Values.data.sql.database.mssqlPath }}/data/ /data
                echo "Backup data copied."
              else
                echo "MSSQL data exists. Skipping backup."
              fi
          volumeMounts:
            - name: mssqldb
              mountPath: /data
      containers:
        - name: mssql
          image: {{ .Values.data.deployment.pod.container.image.name }}
          ports:
            - containerPort: {{ .Values.data.deployment.pod.container.containerPort }}
          env:
            - name: MSSQL_PID
              value: "Developer"
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.data.secret.name }}
                  key: SA_PASSWORD
          volumeMounts:
            - name: mssqldb
              mountPath: {{ .Values.data.sql.database.mssqlPath }}
          readinessProbe:
            exec:
              command: 
                - sh
                - -c
                - /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "$SA_PASSWORD" -Q "SELECT @@VERSION"
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: mssqldb
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.data.service.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.data.service.name }}
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: data
spec:
  selector:
    app.kubernetes.io/name: {{ .Values.data.deployment.pod.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.data.service.port }}
      targetPort: {{ .Values.data.deployment.pod.container.containerPort }}
